<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE codetemplates PUBLIC "-//NetBeans//DTD Editor Code Templates settings 1.0//EN" "http://www.netbeans.org/dtds/EditorCodeTemplates-1_0.dtd">
<codetemplates>
  <!-- Class decl -->
  <codetemplate abbreviation="clor" xml:space="preserve">
        <code><![CDATA[class ${Type}Reader extends ObjectReader<${Type}>{
public ${Type}Reader()
{super(Order.${ORDER default="ALL"}, Options.${OPTIONS default="NONE"}, "${elementName}", ${Package}Schema.SCHEMA);}

@Override
public ${Type} start(Attributes attributes) throws ReaderException
{return new ${Type}();}

@Override
public ElementHandlerMap getHandlers() throws ReaderException
{ReaderBuilder builder=this.newBuilder(); 
return builder.getHandlers();}

@Override
public Class<${Type}> getObjectClass()
{ return ${Type}.class;}
}]]></code>
    <description><![CDATA[ObjectReader class]]></description>
  </codetemplate>
    
  <codetemplate abbreviation="clors" xml:space="preserve">
    <code><![CDATA[class ${Type}Section extends Section
{
public ${Type}Section()
{super(Order.${ORDER default="OPTIONS"}, Options.${OPTIONS default="NONE"}, "${elementName}");}
@Override
public ElementHandlerMap getHandlers() throws ReaderException
{ReaderBuilder builder=this.newBuilder();
return builder.getHandlers();
}    
}]]></code>
    <description><![CDATA[ObjectReader.Section pattern]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="clorss" xml:space="preserve">
    <code><![CDATA[class ${Type}Section extends StringSection
{
public ${Type}Section()
{super(Options.${OPTIONS default="NONE"}, "${elementName}");}
@Override
public void contents(${Type} object, String textContents) throws ReaderException
{return new ${Type}();}    
} ]]></code>
    <description><![CDATA[ObjectReader.Section pattern]]></description>
  </codetemplate>

  <codetemplate abbreviation="closr" xml:space="preserve">
    <code><![CDATA[class ${Type}Reader extends ObjectStringReader<${Type}>
{public ${Type}Reader()
{super(Options.${Options default="NONE"}, "${elementName}", ${Package}Schema.SCHEMA);}
@Override
public ${Type} contents(${Type} object, String textContents) throws ReaderException
{return new ${Type}();}
@Override
public Class<${Type}> getObjectClass()
{return ${Type}.class;}  
}
]]></code>
    <description><![CDATA[ObjectStringReader class]]></description>
  </codetemplate>
    
  <!-- Class methods -->
  <codetemplate abbreviation="main" xml:space="preserve">
    <code><![CDATA[static public void main(String[] args) {}]]></code>
  </codetemplate>
    
  <codetemplate abbreviation="orstart" xml:space="preserve">
    <code><![CDATA[public ${Object} start(Attributes attributes) throws ReaderException
{return ${null};}
]]></code>
    <description><![CDATA[ObjectReader start method]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="orsstart" xml:space="preserve">
    <code><![CDATA[public void start(#{Object} object, Attributes attributes) throws ReaderException
{}
]]></code>
    <description><![CDATA[ObjectReader start method]]></description>
  </codetemplate>

  <codetemplate abbreviation="orend" xml:space="preserve">
    <code><![CDATA[@Override
public ${Object} end(${Object} object) throws ReaderException
{return null;}]]></code>
    <description><![CDATA[ObjectReader end method]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="orsend" xml:space="preserve">
    <code><![CDATA[@Override
public void end(${Object} object) throws ReaderException
{}]]></code>
    <description><![CDATA[ObjectReader end method]]></description>
  </codetemplate>
    
  <codetemplate abbreviation="orm" xml:space="preserve">
    <code><![CDATA[public ${Type}Reader()
{super(Order.${ORDER default="ALL"}, Options.${OPTIONS default="NONE"}, "${elementName}", ${Package}Schema.SCHEMA);}

@Override
public ${Type} start(Attributes attributes) throws ReaderException
{return new ${Type}();}

@Override
public ElementHandlerMap getHandlers() throws ReaderException
{ReaderBuilder builder=this.newBuilder(); 
return builder.getHandlers();}

@Override
public Class<${Type}> getObjectClass()
{ return ${Type}.class;}
]]></code>
    <description><![CDATA[ObjectReader methods
]]></description>
  </codetemplate>
    
  <!-- ReaderBuilder -->
  <codetemplate abbreviation="rbcb" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").callBoolean("${method}");]]></code>
    <description><![CDATA[Reader builder call boolean]]></description>
  </codetemplate>
 
  <codetemplate abbreviation="rbcc" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").contents(${Class}.class).call("${method}");]]></code>
    <description><![CDATA[Reader builder call contents]]></description>
  </codetemplate>

  <codetemplate abbreviation="rbcd" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").callDouble("${method}");]]></code>
    <description><![CDATA[Reader builder call double]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="rbci" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").callInteger("${method}");]]></code>
    <description><![CDATA[Reader builder call integer]]></description>
  </codetemplate>

  <codetemplate abbreviation="rbcr" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").reader(new ${Class}Reader()).call("${method}");]]></code>
    <description><![CDATA[Reader builder element/reader/call]]></description>
  </codetemplate>

  <codetemplate abbreviation="rbcs" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").callString("${method}");]]></code>
    <description><![CDATA[Reader builder call string]]></description>
  </codetemplate>

  <codetemplate abbreviation="rbnew" xml:space="preserve">
    <code><![CDATA[ReaderBuilder ${builder}=this.newBuilder();
return ${builder}.getHandlers();]]></code>
    <description><![CDATA[Reader builder new]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="rbfac" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.factory(new ${Class}Factory()).call("${method}");
]]></code>
    <description><![CDATA[Reader builder factory]]></description>
  </codetemplate>
    
  <codetemplate abbreviation="rbfix" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").fixed(${value}).call("${method}");
]]></code>
    <description><![CDATA[Reader builder fixed]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="rbref" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.element("${element}").reference(${Class}.class).call("${method}");]]></code>
    <description><![CDATA[Reader builder reference]]></description>
  </codetemplate>
  
  <codetemplate abbreviation="rbsec" xml:space="preserve">
    <code><![CDATA[${builder editable=false instanceof="gov.llnl.utility.ObjectReader.ReaderBuilder"}.section(new ${Name}Section());
]]></code>
    <description><![CDATA[Reader builder section]]></description>
  </codetemplate>
    
</codetemplates>
